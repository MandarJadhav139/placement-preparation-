//problems
*delete without head pointer
	-Fast solution is to copy the data from the next node to the node to be deleted and delete the next node. Same thing like following.

*convert binary  tree to circular linked list
	-according to inorder traversal convert binary tree to cdll

****************************************************************
practical applications :-

* used to implement queue - so in scheduling algorithms circular linked list is used
* multiplayer boardgame like ludo
* DOUBLY LINKED LIST :- redo and undo , front and back in browser

**advantage:-
	-1) Any node can be a starting point. We can traverse the whole list by starting from any point. We just need to stop when the first visited node is visited again.

	-2) Useful for implementation of queue. Unlike this implementation, we donâ€™t need to maintain two pointers for front and rear if we use circular linked list. We can maintain a pointer to the last inserted node and front can always be obtained as next of last.










